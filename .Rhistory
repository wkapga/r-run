head(xy)
head(xy,10)
xy1=head(xy,10)
distm(xy1)
history(100)
sapply(xy1,spDists)
sapply(xy1,spDistsN1)
sapply(cbind(xy1,xy1),spDistsN1)
lapply(cbind(xy1,xy1),spDistsN1)
lapply(cbind(xy1,xy1),spDists)
spDists(xy1)
xy1
xy2 = xy[2:11,]
xy2
spDists(xy1,xy2)
apply(xy1,1,spDists)
apply(xy1,1,spDists,xy2)
apply(xy1,1,spDists)
apply(cbind(xy1,xy2),1,spDists)
spDists(xy1,xy2)
aa=spDists(xy1,xy2)
out=spDists(xy1,xy2)
sum(out[row(out)==col(out)+1])
out=spDists(xy1)
sum(out[row(out)==col(out)+1])
sum(out[row(out)==col(out)+1])*1e3
out=spDists(xy)
sum(out[row(out)==col(out)+1])*1e3
sum(out[row(out)==col(out)+1])
out=spDistsN1(xy)
out=spDists(xy)
(out[row(out)==col(out)+1])
plot(out[row(out)==col(out)+1])
aggregate(out[row(out)==col(out)+1])
cumsum(out[row(out)==col(out)+1])
plot(cumsum(out[row(out)==col(out)+1]))
history()
tt1=spDists(cbind(pp$lon,pp$lat))
dis = cumsum(tt1[row(tt1)==col(tt1)+1])
plot(dis)
str(dis)
str(pp)
tt1=spDists(cbind(pp$lon,pp$lat))
tt1=spDists(cbind(pp$lon,pp$lat),longlat=TRUE)
dis = cumsum(tt1[row(tt1)==col(tt1)+1])
plot(dis)
qplot(pp$tim, pp$hr)
library(ggplot2)
qplot(pp$tim, pp$hr)
qplot(pp$tim, dis)
qplot( dis)
plot( dis)
ls()
rm(tt1)
ls()
tt1=spDists(cbind(pp$lon,pp$lat),longlat=TRUE)
pp$dis =c(0, cumsum(tt1[row(tt1)==col(tt1)+1]))
rm(t1)
plot(pp$tim, pp$dis)
ggplot(pp$tim, pp$dis)
qplot(pp$tim, pp$dis)
diff(pp$dis)
diff(pp$tim)
diff(pp$dis)/diff(pp$tim)
diff(pp$dis) / as.num(diff(pp$tim))
diff(pp$dis) / as.numeric(diff(pp$tim))
diff(pp$dis) / as.numeric(diff(pp$tim)) * 3600
spd = diff(pp$dis) / as.numeric(diff(pp$tim)) * 3600
plot(spd)
filter(spd)
filter(spd,rep(1/5,5), sides=2)
plot(filter(spd,rep(1/5,5), sides=2))
plot(filter(spd,rep(1/20,20), sides=2))
plot(filter(spd,rep(1/40,40), sides=2))
plot(filter(spd,rep(1/60,60), sides=2))
plot(filter(spd,rep(1/100,100), sides=2))
plot(filter(spd,rep(1/200,200), sides=2))
plot(filter(spd,rep(1/300,300), sides=2))
tt1 = (filter(spd,rep(1/300,300), sides=2))
str(tt1)
tt1 = (filter(spd,rep(1/300,300), sides=1))
str(tt1)
tt1 = (filter(spd,rep(1/30,30), sides=1))
str(tt1)
plot(tt1)
spd = diff(pp$dis, lag=5) / as.numeric(diff(pp$tim, lag=5)) * 3600
plot(spd)
spd = as.numeric(diff(pp$tim, lag=5)) / diff(pp$dis, lag=5) * 60
plot(spd)
spd
spd = as.numeric(diff(pp$tim, lag=5)) / diff(pp$dis, lag=5) 
spd
spd = as.numeric(diff(pp$tim, lag=5)) / diff(pp$dis, lag=5) /60
spd
spd = as.numeric(diff(pp$tim, lag=10)) / diff(pp$dis, lag=10) / 60
plot(spd)
spd1 = (filter(spd,rep(1/30,30), sides=1))
plot(spd1)
spd = as.numeric(diff(pp$tim, lag=30)) / diff(pp$dis, lag=30) / 60
spd1 = (filter(spd,rep(1/30,30), sides=1))
plot(spd1)
spd
spd = as.numeric(diff(pp$tim, lag=30)) / diff(pp$dis, lag=30) 
spd
spd = as.numeric(diff(pp$tim, lag=30)) / diff(pp$dis, lag=30) 
plot(spd)
5)) * 3600
lg = 30
 # spd = as.numeric(diff(pp$tim, lag=lg)) / diff(pp$dis, lag=lg) / 60
spd = diff(pp$dis, lag=lg) / as.numeric(diff(pp$tim, lag=lg)) * 3600
spd = diff(pp$dis, lag=lg) / as.numeric(diff(pp$tim, lag=lg)) * 3600
plot(spd)
as.numeric(diff(pp$tim, lag=lg))
spd = diff(pp$dis, lag=lg) / diff( as.numeric(pp$tim), lag=lg)) * 3600
spd = diff(pp$dis, lag=lg) / diff( as.numeric(pp$tim), lag=lg) * 3600
plot(spd)
spd =   diff( as.numeric(pp$tim), lag=lg) / diff(pp$dis, lag=lg) / 60
plot(spd)
lg = 90
spd =   diff( as.numeric(pp$tim), lag=lg) / diff(pp$dis, lag=lg) / 60
plot(spd)
str(spd)
plot(spd, type ="l")
lg = 200
spd =   diff( as.numeric(pp$tim), lag=lg) / diff(pp$dis, lag=lg) / 60
plot(spd, type ="l")
lg = 100
plot(spd, type ="l")
pp$spd = c(rep(spd[1],lag),spd)
rep(spd[1],lag)
spd[1]
rep(spd[1],5)
rep(spd[1],lag)
rep(spd[1],lg)
pp$spd = c(rep(spd[1],lg),spd)
lg = 200
spd =   diff( as.numeric(pp$tim), lag=lg) / diff(pp$dis, lag=lg) / 60
pp$spd = c(rep(spd[1],lg),spd)
knit("endo1.Rhtml")
library(knitr)
knit("endo1.Rhtml")
plot(pp$spd,pp$hr)
setwd("K:/AM/GFI/wkapga/proj/R")
knit("rates_loans3.Rhtml")
ggplot(plotdata)
qplot(plotdata)
ggplot(as.zoo(plotdata))
ggplot(  real.pch.dom.q.EA17["2010::"])
ff=dataframe(plotdata)
ff=data.frame(plotdata)
ff
str(ff)
ggplot(Gwth, data=ff)
ff$Gwth
ggplot(ff$Gwth, data=ff)
qplot(ff$Gwth, data=ff)
str(ff)
ff
ggplot() + geom_line(data=ff,aes(x=ff$Gwth,y=ff$Impulse))
ggplot() + geom_line(data=ff,aes(x=index(ff),y=ff$Impulse))
index(ff)
names(ff)
rows(ff)
ff
str(ff)
row.names(ff)
ggplot() + geom_line(data=ff,aes(x=row.names(ff),y=ff$Impulse))
ggplot(data=ff,aes(x=row.names(ff)) + geom_line(data=ff,aes(x=row.names(ff),y=ff$Impulse))
)
ggplot(data=ff,aes(x=row.names(ff) ) 
)
ggplot(data=ff, aes(x=row.names(ff)) ) 
ggplot(data=ff, aes(x=row.names(ff)) ) + geom_line(data=ff,aes(x=row.names(ff),y=ff$Impulse))
ggplot(data=ff, aes(x=row.names(ff)) ) + geom_line(data=ff,y=ff$Impulse))
ggplot(data=ff, aes(x=row.names(ff)) ) + geom_line(data=ff,y=ff$Impulse)
ggplot(data=ff, aes(x=row.names(ff)) ) + geom_line(y=ff$Impulse))
ggplot(data=ff, aes(x=row.names(ff)) ) + geom_line(y=ff$Impulse)
history()
history(100)
ff
history(100)
ff
ff=data.frame(plotdata)
ff
ff$dd = index(plotdata)
ff
ff$dd = index(plotdata)
ggplot(data=ff, aes(x=dd) ) + geom_line(y=ff$Impulse)
ggplot(data=ff, aes(x=dd) ) + geom_line(y=ff$Impulse)
as.Date(index(plotdata))
 ff=data.frame(plotdata)
 ff$dd = as.Date(index(plotdata))
 ggplot(data=ff, aes(x=dd) ) + geom_line(y=ff$Impulse)
 ggplot(data=ff, aes(x=dd, y=ff$Impulse) )
 ggplot(data=ff, x=dd, y=Impulse) )
 ggplot(data=ff, x=dd, y=Impulse) 
dd
ff$dd
ff$Impulse
ff
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_line()
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_area()
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_bar()
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_line()
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_line(geaom=bar)
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_line(geom=bar)
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_line(geom="bar")
 ggplot(data=ff, aes(x=dd, y=Impulse) , geom ="bar" ) + geom_line()
 qplot(data=ff, aes(x=dd, y=Impulse) , geom ="bar" ) + geom_line()
 qplot(data=ff, aes(x=dd, y=Impulse) , geom ="bar" ) 
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_line()
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_bar()
 ggplot(data=ff, aes(x=dd, y=Impulse) ) + geom_bar(stat="identity")
 ggplot(data=ff, aes(x=dd) ) + geom_bar( aes(y=Impulse)stat="identity")
 ggplot(data=ff, aes(x=dd) ) + geom_bar( aes(y=Impulse),stat="identity")
 ggplot(data=ff, aes(x=dd) ) + geom_bar( aes(y=Impulse),stat="identity") + geom_bar( aes(y=Gwth),stat="identity")
 p1 <- ggplot(data=ff, aes(x=dd) ) + geom_bar( aes(y=Impulse),stat="identity") 
 p2 <- ggplot(data=ff, aes(x=dd) ) + geom_bar( aes(y=Gwth),stat="identity")
 multiplot(p1,p2)
require(gridExtra)
 p1 <- ggplot(data=ff, aes(x=dd) ) + geom_bar( aes(y=Impulse),stat="identity") 
 p2 <- ggplot(data=ff, aes(x=dd) ) + geom_bar( aes(y=Gwth),stat="identity")
 grid.arrange(p1, p2, ncol=2)
 grid.arrange(p1, p2)
library(gridExtra)
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
 grid.arrange(p1, p2)
library(gridExtra)
 grid.arrange(p1, p2)
 grid.arrange(p2)
utils:::menuInstallPkgs()
library(raster)
library(raster)
getData('SRTM', lon=17, lat=47)
update.packages(ask='graphics',checkBuilt=TRUE)
utils:::menuInstallPkgs()
setwd("K:/AM/GFI/wkapga/proj/R/g")
 library(knitr)
knit("endo1.Rhtml")
knit("endo1.Rhtml")
knit("endo1.Rhtml")
utils:::menuInstallPkgs()
library(sp)
library(dismo)
# some addresses in Austria
pts <- geocode(c("Aldrans, Grubenweg", "Wien, Stephansdom", "Salzburg, Mozartplatz"))
# make pts spatial
coords <- SpatialPoints(pts[, c("longitude", "latitude")])
spdf_pts <- SpatialPointsDataFrame(coords, pts)
# assign CRS/projection (which is WGS 1984)
crs <- CRS(" +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
proj4string(spdf_pts) <- crs
# spatial data to extract (altitude)
alt <- getData('alt', country = "AT")
# convert alt from raster to grid (needed for over::sp)
# and assign CRS (which is the same as spdf_pts, see > alt@crs)
# don't mind warning - the CRS is the same..
spdf_alt <- as(alt, 'SpatialGridDataFrame')
proj4string(spdf_alt) <- crs
# view
plot(alt)
# plot pts on top
plot(spdf_pts, cex = 2, col = 2, add = T)
# check data
str(spdf_pts)
str(spdf_alt)
# get the raster/pixel/grid data (> ?over):
cbind(spdf_pts$interpretedPlace, over(spdf_pts, spdf_alt))
pts
SpatialPoints(pts[, c("longitude", "latitude")])
SpatialPoints(pts)
a=SpatialPoints(pts)
a
plot(a)
str(a)
a[lon]
a[,lon]
a[,"lon"]
a$lon
a$lat
a["lon"]
a[,"lon"]
a[[,"lon"]]
a[[,"lon"]]
cc=SpatialPoints(pts)
coords = cbind(cc$lon,cc$lat)
spdf_pts <- SpatialPointsDataFrame(coords, pts)
# assign CRS/projection (which is WGS 1984)
crs <- CRS(" +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
proj4string(spdf_pts) <- crs
# spatial data to extract (altitude)
alt <- getData('alt', country = "AT")
spdf_alt <- as(alt, 'SpatialGridDataFrame')
proj4string(spdf_alt) <- crs
plot(alt)
plot(spdf_pts, cex = 2, col = 2, add = T)
pp$lon
coords = cbind(pp$lon,pp$lat)
spdf_pts <- SpatialPointsDataFrame(coords, pts)
# assign CRS/projection (which is WGS 1984)
crs <- CRS(" +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
proj4string(spdf_pts) <- crs
# spatial data to extract (altitude)
alt <- getData('alt', country = "AT")
# convert alt from raster to grid (needed for over::sp)
# and assign CRS (which is the same as spdf_pts, see > alt@crs)
# don't mind warning - the CRS is the same..
spdf_alt <- as(alt, 'SpatialGridDataFrame')
proj4string(spdf_alt) <- crs
 spdf_alt
str( spdf_alt )
str( spdf_pts )
head(spdf_alt)
head(spdf_alt,50)
head(spdf_alt,2000)
plot(alt)
# plot pts on top
plot(spdf_pts, cex = 2, col = 2, add = T)
pts
str(pts)
pts=cbind(pp$lon,pp$lat)
cc=SpatialPoints(pts)
spdf_pts <- SpatialPointsDataFrame(coords, pts)
data.frame(pts)
pts=data.frame(cbind(pp$lon,pp$lat))
# make pts spatial
#coords <- SpatialPoints(pts[, c("longitude", "latitude")])
cc=SpatialPoints(pts)
coords = cbind(cc$lon,cc$lat)
coords = cbind(pp$lon,pp$lat)
spdf_pts <- SpatialPointsDataFrame(coords, pts)
# assign CRS/projection (which is WGS 1984)
crs <- CRS(" +proj=longlat +datum=WGS84 +ellps=WGS84 +towgs84=0,0,0")
proj4string(spdf_pts) <- crs
# spatial data to extract (altitude)
alt <- getData('alt', country = "AT")
# convert alt from raster to grid (needed for over::sp)
# and assign CRS (which is the same as spdf_pts, see > alt@crs)
# don't mind warning - the CRS is the same..
spdf_alt <- as(alt, 'SpatialGridDataFrame')
proj4string(spdf_alt) <- crs
# view
plot(alt)
# plot pts on top
plot(spdf_pts, cex = 2, col = 2, add = T)
  str(spdf_pts)
  str(spdf_alt)
aa = cbind(spdf_pts$interpretedPlace, over(spdf_pts, spdf_alt))
over(spdf_pts, spdf_alt)
plot(over(spdf_pts, spdf_alt))
(over(spdf_pts, spdf_alt))
aa=(over(spdf_pts, spdf_alt))
str(aa)
plot(pp$ti,aa)
str(pp$ti)
plot(pp$ti,as.numeric(aa))
(as.numeric(aa))
aa
aa-1
aa*1
y= as.numeric(aa*1)
y= as.numeric(aa*1.01)
aa
unlist(aa)
as.numeric(unlist(aa))
ab=as.numeric(unlist(aa))
plot(ab)
plot(pp$ti,as.numeric(ab))
myalt = as.numeric(unlist(over(spdf_pts, spdf_alt)))
plot(pp$dis,myalt)
str(alt)
pp$ele
head(pp)
bb
bb <- qbbox(pp$lat[1:100], pp$lon[1:100])
bb
head(pp)
head(pp(20))
head(pp,20)
pp[c(1,20),]
pp[c(1,15),]
rss1 <- xmlInternalTreeParse(""K:/AM/GFI/wkapga/proj/R/g/tmp1rss.xml")
rss1 <- xmlInternalTreeParse("K:/AM/GFI/wkapga/proj/R/g/tmp1rss.xml")
rss1
rss2 <- xmlToDataFrame("K:/AM/GFI/wkapga/proj/R/g/tmp1rss.xml")
rss2
str(rss2)
rss1
getNodeSet(rss1)
getNodeSet("K:/AM/GFI/wkapga/proj/R/g/tmp1rss.xml")
src = xpathApply(rss1, "//a[@href]", xmlGetAttr, "href")
src
src = xpathApply(rss1, "//a[@atr-value]", xmlGetAttr, "href")
src
src = xpathApply(rss1, "//ul", xmlGetAttr, "href")
src
xpathApply(rss1, "//ul", xmlGetAttr, "href")
xpathApply(rss1, "//ul class", xmlGetAttr, "href")
rss1
head(rss1)
xpathApply(rss1, "georss:point", xmlGetAttr, "href")
xpathApply(rss1, "//georss:point", xmlGetAttr, "href")
xpathApply(rss1, "//georss:point", xmlValue)
a=xpathApply(rss1, "//georss:point", xmlValue)
a
b=colsplit(a," ")
a=xpathApply(rss1, "//georss:point", xmlValue)
a
a
b=xpathApply(rss1, "//span class="atr-value", xmlValue)
b=xpathApply(rss1, "//span class=\"atr-value\"", xmlValue)
b=xpathApply(rss1, "//atr-value, xmlValue)
"
)
b=xpathApply(rss1, "//atr-value", xmlValue)
b
rss1 <- xmlInternalTreeParse("K:/AM/GFI/wkapga/proj/R/g/tmp1.kml")
rss1 <- xmlInternalTreeParse("K:/AM/GFI/wkapga/proj/R/g/test1.kml")
rss1
a=xpathApply(rss1, "//coordinates", xmlValue)
a
a
rss1
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
utils:::menuInstallPkgs()
library(rgdal)
readOGR
readOGR("K:/AM/GFI/wkapga/proj/R/g/test1.kml",layer="1")
readOGR("K:/AM/GFI/wkapga/proj/R/g/test1.kml",layer="ogdwien:GELAENDEOGD")
aa = readOGR("K:/AM/GFI/wkapga/proj/R/g/test1.kml",layer="ogdwien:GELAENDEOGD")
plot(aa)
j=c(pp$lon[1],pp$lat[1])
j
over(j,aa)
spdf_alt <- as(aa, 'SpatialGridDataFrame')
aa$extend
aa[1]
aa[1]
aa[2]
aa[,2]
aa[,1]
aa[,1]
aa[[1]]
aa[[2]]
bb = aa[[2]]
str(bb)
bb[1]
gsub("<h4>GELAENDEOGD</h4>bb[1]
<ul class="textattributes">
  <li><strong><span class="atr-name">OBJECTID</span>:</strong> <span class="atr-value">"
gsub("\\","",bb[1])
gsub("\\D","",bb[1])
gsub("[\\D.]","",bb[1])
gsub("[\\D,.]","",bb[1])
gsub("[\\D]","",bb[1])
gsub("\\D","",bb[1])
gsub("\\D.","",bb[1])
gsub("\\D,.","",bb[1])
gsub("\\D.","",bb[1])
gsub("\\d","",bb[1])
gsub("\\d+","",bb[1])
library(stringr)
pat <- "(\\d)+"
(str_extract(bb[1],pat)
)
str_extract_all(bb[1],,"\\(?[0-9,.]+\\)?")
str_extract_all(bb[1],"\\(?[0-9,.]+\\)?")
bb = aa[[2]]
str_extract_all(bb,"\\(?[0-9,.]+\\)?")
cc[,4]
cc[[,4]]
cc[[4]]
cc = str_extract_all(bb,"\\(?[0-9,.]+\\)?")[5]
cc
cc = str_extract_all(bb,"\\(?[0-9,.]+\\)?")
cc
str(cc)
sapply(cc,"[[",5)
dd = sapply(cc,"[[",5)
aa[[2]] = dd
aa
plot(aa)
dd
dd*2
as.numeric(dd)
aa[[2]] = as.numeric(dd)
aa
str(aa)
aa[[2]]
aa[[1]]
aa
str(aa)
aa$coords
aa@coords
plot(aa@coords)
ggplot(aa@coords,aes(x = x1, y= x2, colour= x3))
ggplot(data.frame(aa@coords),aes(x = x1, y= x2, colour= x3))
fortify(aa@coords)
data.frame(aa@coords)
pdaa=data.frame(aa@coords)
ggplot(pdaa,aes(x = x1, y= x2, colour= x3))
ggplot(pdaa,aes(x = coordsx1, y= x2, colour= x3))
ggplot(pdaa,aes(x = coords.x1, y= x2, colour= x3))
ggplot(pdaa,aes(x = coords.x1, y= coords.x2, colour= x3))
ggplot(pdaa,aes(x = coords.x1, y= coords.x2)) + geom_line()
ggplot(pdaa,aes(x = coords.x1, y= coords.x2)) + geom_points()
ggplot(pdaa,aes(x = coords.x1, y= coords.x2)) + geom_point()
ggplot(pdaa,aes(x = coords.x1, y= coords.x2,colour= coords.x3)) + geom_point()
 ggplot(pdaa,aes(x = coords.x1, y= coords.x2,colour= coords.x3)) + geom_area()
 ggplot(pdaa,aes(x = coords.x1, y= coords.x2,colour= coords.x3)) + geom_point()
